<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>雾苑</title>
  
  
  <link href="https://lecoding.ltd/atom.xml" rel="self"/>
  
  <link href="https://lecoding.ltd/"/>
  <updated>2021-06-05T08:12:05.528Z</updated>
  <id>https://lecoding.ltd/</id>
  
  <author>
    <name>闲来揽秋雾</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>索引优化</title>
    <link href="https://lecoding.ltd/article/484a2385.html"/>
    <id>https://lecoding.ltd/article/484a2385.html</id>
    <published>2021-06-05T08:10:56.498Z</published>
    <updated>2021-06-05T08:12:05.528Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MySQL高级"><a href="#MySQL高级" class="headerlink" title="MySQL高级"></a>MySQL高级</h1><hr><h2 id="一、MySQL的逻辑架构"><a href="#一、MySQL的逻辑架构" class="headerlink" title="一、MySQL的逻辑架构"></a>一、MySQL的逻辑架构</h2><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605161159.jpg" alt="1"></p><a id="more"></a><h4 id="1、逻辑分层图"><a href="#1、逻辑分层图" class="headerlink" title="1、逻辑分层图"></a>1、逻辑分层图</h4><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605155935.png" alt="img"><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605155908.jpg" alt="img"></p><h4 id="2、各层详解"><a href="#2、各层详解" class="headerlink" title="2、各层详解"></a>2、各层详解</h4><h6 id="1、连接层"><a href="#1、连接层" class="headerlink" title="1、连接层"></a>1、连接层</h6><p>是一些客户端和连接服务。主要完成连接、授权认证等操作。</p><h6 id="2、业务逻辑（服务）层"><a href="#2、业务逻辑（服务）层" class="headerlink" title="2、业务逻辑（服务）层"></a>2、业务逻辑（服务）层</h6><p>核心服务功能。包括内部语句优化，内部缓存等。</p><h6 id="3、引擎层"><a href="#3、引擎层" class="headerlink" title="3、引擎层"></a>3、引擎层</h6><p>真正负责了MySQL中数据的存储和读取，服务器通过API和引擎通信。</p><h6 id="4、文件日志层"><a href="#4、文件日志层" class="headerlink" title="4、文件日志层"></a>4、文件日志层</h6><p>将数据存储在文件系统，完成与存储引擎的交互。</p><h4 id="3、存储引擎架构是最大亮点"><a href="#3、存储引擎架构是最大亮点" class="headerlink" title="3、存储引擎架构是最大亮点"></a>3、存储引擎架构是最大亮点</h4><p>插件式的存储引擎架构将查询处理和其他的系统任务以及数据的存储提取相分离。</p><h2 id="二、MyISAM和InnoDB"><a href="#二、MyISAM和InnoDB" class="headerlink" title="二、MyISAM和InnoDB"></a>二、MyISAM和InnoDB</h2><h4 id="1、2种引擎的对比"><a href="#1、2种引擎的对比" class="headerlink" title="1、2种引擎的对比"></a>1、2种引擎的对比</h4><table><thead><tr><th align="center">对比项</th><th align="center">MyISAM</th><th align="center">InnoDB</th></tr></thead><tbody><tr><td align="center">外键</td><td align="center">不支持</td><td align="center">支持</td></tr><tr><td align="center">事务</td><td align="center">不支持</td><td align="center">支持</td></tr><tr><td align="center">行表锁</td><td align="center">表锁：即使操作一条记录也会锁住整张表。</td><td align="center">行锁：操作时只锁住某行，不影响其他行。适合高并发的操作。</td></tr><tr><td align="center">缓存</td><td align="center">只缓存索引，不缓存真实数据。</td><td align="center">不仅缓存索引，还缓存真实数据。对内存要求较高，内存大小对性能有决定性的影响。</td></tr><tr><td align="center">表空间</td><td align="center">小</td><td align="center">大</td></tr><tr><td align="center">关注点</td><td align="center">性能：偏向读取操作</td><td align="center">事务</td></tr><tr><td align="center">默认安装</td><td align="center">Y</td><td align="center">Y</td></tr></tbody></table><h2 id="三、性能分析"><a href="#三、性能分析" class="headerlink" title="三、性能分析"></a>三、性能分析</h2><h5 id="1、mysqlQuery-Optimizer（性能优化器）"><a href="#1、mysqlQuery-Optimizer（性能优化器）" class="headerlink" title="1、mysqlQuery Optimizer（性能优化器）"></a>1、mysqlQuery Optimizer（性能优化器）</h5><h5 id="2、mysql常见瓶颈"><a href="#2、mysql常见瓶颈" class="headerlink" title="2、mysql常见瓶颈"></a>2、mysql常见瓶颈</h5><ul><li>CPU：</li><li>IO：</li><li>服务器硬件性能：</li></ul><h5 id="3、Explain"><a href="#3、Explain" class="headerlink" title="3、Explain"></a>3、Explain</h5><h6 id="3-1、是什么？"><a href="#3-1、是什么？" class="headerlink" title="3.1、是什么？"></a>3.1、是什么？</h6><p>查看执行计划：模拟优化器执行SQL查询语句。</p><h6 id="3-2、能干嘛？"><a href="#3-2、能干嘛？" class="headerlink" title="3.2、能干嘛？"></a>3.2、能干嘛？</h6><ul><li>表的读取顺序</li><li>数据读取操作的操作类型</li><li>哪些索引可以使用</li><li>那些索引被实际使用</li><li>表之间的引用</li></ul><h6 id="3-3、怎么玩？"><a href="#3-3、怎么玩？" class="headerlink" title="3.3、怎么玩？"></a>3.3、怎么玩？</h6><p>explain  + SQL语句</p><h6 id="3-4、字段解释？"><a href="#3-4、字段解释？" class="headerlink" title="3.4、字段解释？"></a>3.4、字段解释？</h6><ul><li>id：执行顺序。<ul><li>相同：由上到下执行。</li><li>不同：主查询先执行，如果是子查询，id值越大，优先级越高，先被执行</li><li>相同又有不同：先执行值大的</li></ul></li><li>select_type：查询类型：SIMPLE、SUBQUERY、PRIMARY</li><li>table</li><li>type:访问类型，至少达到range级别，最好是ref级别。</li></ul><h5 id="4、case"><a href="#4、case" class="headerlink" title="4、case"></a>4、case</h5><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160055.png" alt="image-20210416112721671"></p><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160105.png" alt="image-20210416112910145"></p><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160112.png" alt="image-20210416113044250"></p><h2 id="四、索引以及优化分析"><a href="#四、索引以及优化分析" class="headerlink" title="四、索引以及优化分析"></a>四、索引以及优化分析</h2><h3 id="1、索引介绍"><a href="#1、索引介绍" class="headerlink" title="1、索引介绍"></a>1、索引介绍</h3><h4 id="1、索引是什么？"><a href="#1、索引是什么？" class="headerlink" title="1、索引是什么？"></a>1、索引是什么？</h4><p>MySQL官方：        </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">索引是帮助高效获取数据的数据结构：</span><br><span class="line">    在数据本身之外，数据库还维护着一个满足特定查找算法的数据结构，这个数据结构以某种方式指向数据，</span><br><span class="line">    这样就可以在这些数据结构的基础上实现高级查找算法，这种数据结构就叫索引。</span><br><span class="line">    </span><br><span class="line">排好序的快速查找数据结构。</span><br></pre></td></tr></table></figure><p>嗯，所以索引是数据结构。</p><h4 id="2、为什么要使用索引？"><a href="#2、为什么要使用索引？" class="headerlink" title="2、为什么要使用索引？"></a>2、为什么要使用索引？</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">目的在于提高查询效率。</span><br></pre></td></tr></table></figure><h4 id="3、索引的优势？"><a href="#3、索引的优势？" class="headerlink" title="3、索引的优势？"></a>3、索引的优势？</h4><ul><li>提高了数据检索的效率，降低了数据库IO成本。</li><li>降低了数据排序的成本，降低了CPU消耗。</li></ul><h4 id="4、索引的劣势？"><a href="#4、索引的劣势？" class="headerlink" title="4、索引的劣势？"></a>4、索引的劣势？</h4><ul><li>索引占用空间：索引也是一张表，保存了主键与索引字段，指向实体表的记录。</li><li>提高了查询速度，降低了更新速度。</li></ul><h4 id="5、索引的分类？"><a href="#5、索引的分类？" class="headerlink" title="5、索引的分类？"></a>5、索引的分类？</h4><h5 id="1、单值索引"><a href="#1、单值索引" class="headerlink" title="1、单值索引"></a>1、单值索引</h5><p>一个索引只包含一个列，但是一个表可以有多个单值索引。</p><h5 id="2、唯一索引"><a href="#2、唯一索引" class="headerlink" title="2、唯一索引"></a>2、唯一索引</h5><p>索引列的值必须唯一，但可以为空值。</p><h5 id="3、复合索引"><a href="#3、复合索引" class="headerlink" title="3、复合索引"></a>3、复合索引</h5><p>一个索引包含多个列。</p><h4 id="6、基本语法"><a href="#6、基本语法" class="headerlink" title="6、基本语法"></a>6、基本语法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">创建：</span><br><span class="line">create [unique] index 索引名 on 表名(列名);</span><br><span class="line">alter 表名 add [unique] index 索引名 on 表名(列名);</span><br><span class="line">删除：</span><br><span class="line">drop index 索引名 on 表名;</span><br><span class="line"></span><br><span class="line">查看:</span><br><span class="line">show index from 表名;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="7、索引结构"><a href="#7、索引结构" class="headerlink" title="7、索引结构"></a>7、索引结构</h4><h5 id="1、BTree"><a href="#1、BTree" class="headerlink" title="1、BTree"></a>1、BTree</h5><ul><li>检索原理：</li></ul><h5 id="2、Hash"><a href="#2、Hash" class="headerlink" title="2、Hash"></a>2、Hash</h5><h5 id="3、full-text"><a href="#3、full-text" class="headerlink" title="3、full-text"></a>3、full-text</h5><h5 id="4、R-Tree"><a href="#4、R-Tree" class="headerlink" title="4、R-Tree"></a>4、R-Tree</h5><h4 id="8、哪些情况建立索引？"><a href="#8、哪些情况建立索引？" class="headerlink" title="8、哪些情况建立索引？"></a>8、哪些情况建立索引？</h4><ul><li><strong>主键自动建立唯一索引</strong></li><li>频繁作为查询条件的字段应该建立索引</li><li>查询中与其他表关联的字段，外键关系建立索引</li><li>频繁更新的字段不适合建立索引：因为不仅需要更新记录，还更新了索引</li><li>查询中排序的字段，统计和分组的字段</li></ul><h4 id="9、哪些情况不适合建立索引？"><a href="#9、哪些情况不适合建立索引？" class="headerlink" title="9、哪些情况不适合建立索引？"></a>9、哪些情况不适合建立索引？</h4><ul><li>表的记录太少</li><li>经常增删改的表</li><li>数据重复且分布平均的表字段</li></ul><h3 id="2、索引优化分析"><a href="#2、索引优化分析" class="headerlink" title="2、索引优化分析"></a>2、索引优化分析</h3><h4 id="1、哪些情况需要优化分析？"><a href="#1、哪些情况需要优化分析？" class="headerlink" title="1、哪些情况需要优化分析？"></a>1、哪些情况需要优化分析？</h4><ul><li>性能下降</li><li>执行时间长</li><li>等待时间长</li></ul><p><strong>造成的常见原因？</strong></p><ul><li>SQL语句写得烂</li><li>索引失效<ul><li>单值索引</li><li>复合索引</li></ul></li><li>关联查询太多join</li><li>服务器调优以及各个参数设置</li></ul><h4 id="2、SQL的执行顺序？"><a href="#2、SQL的执行顺序？" class="headerlink" title="2、SQL的执行顺序？"></a>2、SQL的执行顺序？</h4><h4 id="3、Join类型"><a href="#3、Join类型" class="headerlink" title="3、Join类型"></a>3、Join类型</h4><ul><li>左连接     left  join</li><li>右连接     right join</li><li>内连接     inner join</li><li>左外连接  </li><li>右外连接</li><li>全连接   full  outer  join</li><li>全外连接</li></ul><h2 id="五、索引优化案例"><a href="#五、索引优化案例" class="headerlink" title="五、索引优化案例"></a>五、索引优化案例</h2><h3 id="1、单表优化案例"><a href="#1、单表优化案例" class="headerlink" title="1、单表优化案例"></a>1、单表优化案例</h3><h5 id="1、建表"><a href="#1、建表" class="headerlink" title="1、建表"></a>1、建表</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> article(</span><br><span class="line">   <span class="keyword">id</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="literal">null</span> primary <span class="keyword">key</span> auto_increment,</span><br><span class="line">   author_id <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">   category_id <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">   views <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">   title <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">   <span class="keyword">content</span> <span class="built_in">text</span> <span class="keyword">not</span> <span class="literal">null</span>);</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   <span class="keyword">insert</span> <span class="keyword">into</span> article(author_id,category_id,views,title,<span class="keyword">content</span>)</span><br><span class="line">   <span class="keyword">values</span></span><br><span class="line">   (<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;1&#x27;</span>),</span><br><span class="line">   (<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;2&#x27;</span>),</span><br><span class="line">   (<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;3&#x27;</span>);</span><br></pre></td></tr></table></figure><h5 id="2、查询建表是否成功？"><a href="#2、查询建表是否成功？" class="headerlink" title="2、查询建表是否成功？"></a>2、查询建表是否成功？</h5><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160314.png" alt="image-20210416222009619"></p><h5 id="3、给出查询题目"><a href="#3、给出查询题目" class="headerlink" title="3、给出查询题目"></a>3、给出查询题目</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">查询category_id为<span class="number">1</span>且content大于<span class="number">1</span>的情况下，views最多的article_id。</span><br></pre></td></tr></table></figure><h5 id="4、普通查询语句"><a href="#4、普通查询语句" class="headerlink" title="4、普通查询语句"></a>4、普通查询语句</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span>,author_id <span class="keyword">from</span> article <span class="keyword">where</span> category_id = <span class="number">1</span> <span class="keyword">and</span> comments &gt; <span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> views <span class="keyword">desc</span> <span class="keyword">limit</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>explain分析语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">explain</span> <span class="keyword">select</span> <span class="keyword">id</span>,author_id <span class="keyword">from</span> article <span class="keyword">where</span> category_id = <span class="number">1</span> <span class="keyword">and</span> comments &gt; <span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> views <span class="keyword">desc</span> <span class="keyword">limit</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>分析如图：</p><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160320.png" alt="image-20210416223029581"></p><p>我们需要注意上面字段！</p><p>需要优化的地方：</p><ul><li>type是ALL级别，表示全表扫描。</li><li>key为null，就是没有使用索引</li><li>extra：使用了文件内部排序</li></ul><p>查询表索引：</p><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160351.png" alt="image-20210416223438362"></p><hr><h2 id="开始优化"><a href="#开始优化" class="headerlink" title="开始优化"></a>开始优化</h2><hr><h5 id="5、新建索引-删除索引"><a href="#5、新建索引-删除索引" class="headerlink" title="5、新建索引*删除索引"></a>5、新建索引*删除索引</h5><p>建立依据：</p><p>复合索引</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> idx_article_ccv <span class="keyword">on</span> article(category_id,comments,views);</span><br></pre></td></tr></table></figure><p>查询表的索引：</p><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160410.png" alt="image-20210416225421817"></p><p>索引建立之后，再次执行查询语句：</p><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160418.png" alt="image-20210416225726291"></p><p>type级别已经是range了，但是仍然使用了内部文件排序！—————–<strong>范围之后的索引会失效！也就是ccv的v失效了。</strong></p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160452.png" alt="image-20210416230948040" style="zoom:80%;"><p>我们再次优化：</p><p>删除之前的索引，重新建立：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#删除索引</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">index</span> idx_article_ccv <span class="keyword">on</span> article;</span><br><span class="line"></span><br><span class="line"><span class="comment">#建立索引</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> idx_article_cv <span class="keyword">on</span> article(category_id,views);</span><br></pre></td></tr></table></figure><p>再次执行查询：<br><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160459.png" alt="image-20210416230554050"></p><p>至此，完成索引优化！</p><h3 id="2、双表优化案例"><a href="#2、双表优化案例" class="headerlink" title="2、双表优化案例"></a>2、双表优化案例</h3><h5 id="1、建表-1"><a href="#1、建表-1" class="headerlink" title="1、建表"></a>1、建表</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> <span class="keyword">class</span>(</span><br><span class="line">     <span class="keyword">id</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="literal">null</span> auto_increment,</span><br><span class="line">     card <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">     primary <span class="keyword">key</span>(<span class="keyword">id</span>));</span><br><span class="line">     </span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> book(</span><br><span class="line">    bookid <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="literal">null</span> auto_increment,</span><br><span class="line">    card <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">    primary <span class="keyword">key</span>(bookid));</span><br></pre></td></tr></table></figure><p>建表是否成功？</p><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160506.png" alt="image-20210417093019028"></p><h5 id="2、插入数据"><a href="#2、插入数据" class="headerlink" title="2、插入数据"></a>2、插入数据</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">class</span>(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">class</span>(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">class</span>(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">class</span>(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">class</span>(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">class</span>(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">class</span>(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">class</span>(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">class</span>(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">class</span>(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">class</span>(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">class</span>(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">class</span>(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">class</span>(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">class</span>(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">class</span>(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">class</span>(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">class</span>(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">class</span>(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">class</span>(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> book(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> book(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> book(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> book(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> book(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> book(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> book(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> book(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> book(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> book(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> book(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> book(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> book(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> book(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> book(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> book(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> book(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> book(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> book(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> book(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="3、给出查询语句"><a href="#3、给出查询语句" class="headerlink" title="3、给出查询语句"></a>3、给出查询语句</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> book <span class="keyword">left</span> <span class="keyword">join</span> <span class="keyword">class</span> <span class="keyword">on</span> book.card = class.card;</span><br></pre></td></tr></table></figure><p>explain分析：</p><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160512.png" alt="image-20210417094802113"></p><hr><h2 id="开始优化-1"><a href="#开始优化-1" class="headerlink" title="开始优化"></a>开始优化</h2><hr><h5 id="4、添加索引，进行优化"><a href="#4、添加索引，进行优化" class="headerlink" title="4、添加索引，进行优化"></a>4、添加索引，进行优化</h5><ul><li>给左表建索引？</li></ul><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160518.png" alt="image-20210417095401756"></p><p>explain分析：</p><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160524.png" alt="image-20210417095329968"></p><ul><li>删除book索引，给class加索引</li></ul><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160528.png" alt="image-20210417095739393"></p><p>explain分析：</p><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160533.png" alt="image-20210417095913807"></p><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160538.png" alt="image-20210417100153551"></p><h3 id="3、三表优化案例"><a href="#3、三表优化案例" class="headerlink" title="3、三表优化案例"></a>3、三表优化案例</h3><h5 id="1、建表-2"><a href="#1、建表-2" class="headerlink" title="1、建表"></a>1、建表</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> phone(phoneid <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="literal">null</span> aotu_increment,card <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="literal">null</span>,primary <span class="keyword">key</span>(phoneid));</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> phone(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> phone(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> phone(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> phone(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> phone(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> phone(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> phone(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> phone(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> phone(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> phone(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> phone(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> phone(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> phone(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> phone(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> phone(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> phone(card) <span class="keyword">values</span> (<span class="keyword">FLOOR</span>(<span class="number">1</span>+(<span class="keyword">RAND</span>()*<span class="number">20</span>)));</span><br></pre></td></tr></table></figure><h5 id="2、添加索引"><a href="#2、添加索引" class="headerlink" title="2、添加索引"></a>2、添加索引</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> phone <span class="keyword">add</span> <span class="keyword">index</span> idx_phone_card (card);</span><br></pre></td></tr></table></figure><h5 id="3、给出查询语句-1"><a href="#3、给出查询语句-1" class="headerlink" title="3、给出查询语句"></a>3、给出查询语句</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">class</span> <span class="keyword">left</span> <span class="keyword">join</span> book <span class="keyword">on</span> class.card = book.card <span class="keyword">left</span> <span class="keyword">join</span> phone <span class="keyword">on</span> book.card = phone.card;</span><br></pre></td></tr></table></figure><p>explain分析：</p><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160544.png" alt="image-20210417142017808"></p><p>优化：</p><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160549.png" alt="image-20210417142502665"></p><h2 id="六、join语句的索引优化总结"><a href="#六、join语句的索引优化总结" class="headerlink" title="六、join语句的索引优化总结"></a>六、join语句的索引优化总结</h2><ul><li><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160557.png" alt="image-20210417142545083"></li><li><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160602.png" alt="image-20210417143223153"></li><li><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160609.png" alt="image-20210417145321466"></li><li><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160615.png" alt="image-20210417150150904"></li><li><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160620.png" alt="image-20210417150203585"></li></ul><h2 id="七、索引失效"><a href="#七、索引失效" class="headerlink" title="七、索引失效"></a>七、索引失效</h2><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160627.png" alt="image-20210417150840855"></p><h5 id="1、全值匹配"><a href="#1、全值匹配" class="headerlink" title="1、全值匹配"></a>1、全值匹配</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">5</span> <span class="keyword">and</span> age = <span class="number">23</span> <span class="keyword">and</span> <span class="keyword">name</span> = <span class="string">&#x27;tom&#x27;</span>;</span><br></pre></td></tr></table></figure><p>全值匹配时，字段顺序可以和索引列字段顺序不一致。但是，最好按顺序来！</p><h5 id="2、最佳左前缀法则"><a href="#2、最佳左前缀法则" class="headerlink" title="2、最佳左前缀法则"></a>2、最佳左前缀法则</h5><p><img src="/article/484a2385.htm/image-20210417151735233.png" alt="image-20210417151735233"></p><ul><li>最左前列开始</li><li>不能跳过，严格按照顺序</li></ul><h5 id="3、不在索引列做操作，否则索引失效！"><a href="#3、不在索引列做操作，否则索引失效！" class="headerlink" title="3、不在索引列做操作，否则索引失效！"></a>3、不在索引列做操作，否则索引失效！</h5><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160718.png" alt="image-20210417153147680"></p><h5 id="4、范围导致索引失效"><a href="#4、范围导致索引失效" class="headerlink" title="4、范围导致索引失效"></a>4、范围导致索引失效</h5><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160727.png" alt="image-20210417153919868"></p><p>注意：<br>            age的索引用到了，但是是用于排序，不是查找！</p><h5 id="5、尽量不使用-查询"><a href="#5、尽量不使用-查询" class="headerlink" title="5、尽量不使用 * 查询"></a>5、尽量不使用 * 查询</h5><h5 id="6、尽量不使用-lt-gt"><a href="#6、尽量不使用-lt-gt" class="headerlink" title="6、尽量不使用 !=  &lt;&gt;"></a>6、尽量不使用 !=  &lt;&gt;</h5><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160734.png" alt="image-20210417154932551"></p><p><img src="/article/484a2385.htm/image-20210417155007293.png" alt="image-20210417155007293"></p><h5 id="7、is-null-is-not-null"><a href="#7、is-null-is-not-null" class="headerlink" title="7、is null         is not null"></a>7、is null         is not null</h5><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160740.png" alt="image-20210417155137947"></p><p><img src="/article/484a2385.htm/image-20210417155218620.png" alt="image-20210417155218620"></p><h5 id="8、通配符在前"><a href="#8、通配符在前" class="headerlink" title="8、通配符在前"></a>8、通配符在前</h5><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160745.png" alt="image-20210417204757436"></p><p>通配符在后：</p><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160751.png" alt="image-20210417204900597"></p><p>面试题：</p><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605160829.png" alt="image-20210417210059865"></p><p>使用复合（覆盖）索引：即索引的字段列和你要查询的字段一一对应，最好是不多不少，也可以前面多，但是不能后面多。</p><p>假设索引字段列是  a,b,c</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x,a,b,c; <span class="comment">------索引不失效</span></span><br><span class="line">a,b;   <span class="comment">------索引不失效</span></span><br><span class="line">a,b,c,d; <span class="comment">----------不符合，索引失效，全表扫描</span></span><br></pre></td></tr></table></figure><h5 id="9、类型转换"><a href="#9、类型转换" class="headerlink" title="9、类型转换"></a>9、类型转换</h5><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605154412.png" alt="image-20210418125343605"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;MySQL高级&quot;&gt;&lt;a href=&quot;#MySQL高级&quot; class=&quot;headerlink&quot; title=&quot;MySQL高级&quot;&gt;&lt;/a&gt;MySQL高级&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;一、MySQL的逻辑架构&quot;&gt;&lt;a href=&quot;#一、MySQL的逻辑架构&quot; class=&quot;headerlink&quot; title=&quot;一、MySQL的逻辑架构&quot;&gt;&lt;/a&gt;一、MySQL的逻辑架构&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://gitee.com/hlmin/blog-image/raw/master/image/20210605161159.jpg&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="MySQL" scheme="https://lecoding.ltd/categories/MySQL/"/>
    
    
    <category term="索引" scheme="https://lecoding.ltd/tags/%E7%B4%A2%E5%BC%95/"/>
    
    <category term="数据库优化" scheme="https://lecoding.ltd/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>数据库语言四大分类</title>
    <link href="https://lecoding.ltd/article/42b03218.html"/>
    <id>https://lecoding.ltd/article/42b03218.html</id>
    <published>2021-06-05T07:35:49.263Z</published>
    <updated>2021-06-05T07:39:33.981Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据库语言四大分类"><a href="#数据库语言四大分类" class="headerlink" title="数据库语言四大分类"></a>数据库语言四大分类</h1><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605153908.jpeg"></p><h3 id="1、数据定义语言DDL（Data-Ddefinition-Language）"><a href="#1、数据定义语言DDL（Data-Ddefinition-Language）" class="headerlink" title="1、数据定义语言DDL（Data Ddefinition Language）"></a>1、数据定义语言DDL（Data Ddefinition Language）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE , DROP , ALTER , TRUNCATE</span><br></pre></td></tr></table></figure><blockquote><p>主要为以上操作 即<code>对逻辑结构等有操作的</code>，其中包括表结构，视图和索引。</p></blockquote><a id="more"></a><h4 id="1、CREATE操作"><a href="#1、CREATE操作" class="headerlink" title="1、CREATE操作"></a>1、CREATE操作</h4><h5 id="1、创建数据库"><a href="#1、创建数据库" class="headerlink" title="1、创建数据库"></a>1、创建数据库</h5> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database 数据库名 ;</span><br></pre></td></tr></table></figure><h5 id="2、创建表"><a href="#2、创建表" class="headerlink" title="2、创建表"></a>2、创建表</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">create table 表名(</span><br><span class="line">    id int ,</span><br><span class="line">    spend int ,</span><br><span class="line">    cid int ,</span><br><span class="line">    comment varchar(255) ,</span><br><span class="line">    date DATE</span><br><span class="line">)ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8;</span><br><span class="line"># default charset &#x3D; utf8 ----&gt;表示该表按照UTF-8的编码存放中文;</span><br><span class="line"># ENGINE &#x3D; InnoDB ----&gt;mysql的一种存储引擎，MyISAM和InnoDB是其中常用的两种；</span><br><span class="line"># 这里使用ENGINE&#x3D;InnoDB 是因为后续要使用的外键约束只有在InnoDB中才生效。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8;</span><br></pre></td></tr></table></figure><ul><li><p>default charset = utf8 —-&gt;表示该表按照UTF-8的编码存放中文;</p></li><li><p>ENGINE = InnoDB —-&gt;mysql的一种存储引擎，MyISAM和InnoDB是其中常用的两种；</p></li><li><p>这里使用ENGINE=InnoDB 是因为后续要使用的外键约束只有在InnoDB中才生效。</p></li></ul><h5 id="3、创建索引"><a href="#3、创建索引" class="headerlink" title="3、创建索引"></a>3、创建索引</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE  INDEX  索引名称  ON  表名 ( 列名 [ ASC | DESC ]  [ , 列名 [ ASC | DESC ] , ... ] ) ;</span><br></pre></td></tr></table></figure><p>语法说明如下：</p><ul><li><code>&lt;索引名&gt;</code>：指定索引名。一个表可以创建多个索引，但每个索引在该表中的名称是唯一的。</li><li><code>&lt;表名&gt;</code>：指定要创建索引的表名。</li><li><code>&lt;列名&gt;</code>：指定要创建索引的列名。通常可以考虑将查询语句中在 JOIN 子句和 WHERE 子句里经常出现的列作为索引列。</li><li><code>&lt;长度&gt;</code>：可选项。指定使用列前的 length 个字符来创建索引。使用列的一部分创建索引有利于减小索引文件的大小，节省索引列所占的空间。在某些情况下，只能对列的前缀进行索引。索引列的长度有一个最大上限 255 个字节（MyISAM 和 InnoDB 表的最大上限为 1000 个字节），如果索引列的长度超过了这个上限，就只能用列的前缀进行索引。另外，BLOB 或 TEXT 类型的列也必须使用前缀索引。</li><li><code>ASC|DESC</code>：可选项。<code>ASC</code>指定索引按照升序来排列，<code>DESC</code>指定索引按照降序来排列，默认为<code>ASC</code>。</li></ul><p>比如：</p><p>建表之后创建索引：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create index id_indedx on user(id asc);</span><br></pre></td></tr></table></figure><p>建表时创建索引：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE t(</span><br><span class="line">   c1 INT PRIMARY KEY,</span><br><span class="line">   c2 INT NOT NULL,</span><br><span class="line">   c3 INT NOT NULL,</span><br><span class="line">   c4 VARCHAR(10),</span><br><span class="line">   INDEX (c2,c3) </span><br><span class="line">);</span><br></pre></td></tr></table></figure><h5 id="4、创建视图"><a href="#4、创建视图" class="headerlink" title="4、创建视图"></a>4、创建视图</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE VIEW &lt;视图名&gt; AS &lt;SELECT语句&gt;</span><br></pre></td></tr></table></figure><p>语法说明如下。</p><ul><li><code>&lt;视图名&gt;</code>：指定视图的名称。该名称在数据库中必须是唯一的，不能与其他表或视图同名。</li><li>&lt;SELECT语句&gt;：指定创建视图的 SELECT 语句，可用于查询多个基础表或源视图。</li></ul><h4 id="2、DROP操作"><a href="#2、DROP操作" class="headerlink" title="2、DROP操作"></a>2、DROP操作</h4><h6 id="1、删除数据库"><a href="#1、删除数据库" class="headerlink" title="1、删除数据库"></a>1、删除数据库</h6><p>使用 DROP DATABASE 命令时要非常谨慎，在执行该命令后，MySQL 不会给出任何提示确认信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DROP DATABASE [ IF EXISTS ] &lt;数据库名&gt;</span><br><span class="line">#推荐使用</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DROP DATABASE &lt;数据库名&gt;</span><br><span class="line">#当该数据库不存在时，执行会报错</span><br></pre></td></tr></table></figure><h6 id="2、删除数据表"><a href="#2、删除数据表" class="headerlink" title="2、删除数据表"></a>2、删除数据表</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE &lt;表名&gt;</span><br></pre></td></tr></table></figure><p>删除表的结构和数据。</p><h4 id="3、ALTER操作"><a href="#3、ALTER操作" class="headerlink" title="3、ALTER操作"></a>3、ALTER操作</h4><h6 id="1、删除列"><a href="#1、删除列" class="headerlink" title="1、删除列"></a>1、删除列</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE &lt;表名&gt; DROP &lt;列名&gt;</span><br></pre></td></tr></table></figure><h6 id="2、增加列"><a href="#2、增加列" class="headerlink" title="2、增加列"></a>2、增加列</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE &lt;表名&gt; ADD &lt;列名&gt; &lt;类型&gt;</span><br><span class="line">alter table table1 add transactor varchar(10) not Null;</span><br></pre></td></tr></table></figure><h6 id="3、重命名列"><a href="#3、重命名列" class="headerlink" title="3、重命名列"></a>3、重命名列</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE &lt;表名&gt; CHANGE &lt;列名&gt; &lt;新名&gt; </span><br></pre></td></tr></table></figure><h6 id="4、修改数据库信息"><a href="#4、修改数据库信息" class="headerlink" title="4、修改数据库信息"></a>4、修改数据库信息</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ALTER DATABASE &lt;数据库名&gt;</span><br><span class="line">-&gt; DEFAULT CHARACTER SET gb2312</span><br><span class="line">-&gt; DEFAULT COLLATE gb2312_chinese_ci;</span><br></pre></td></tr></table></figure><h6 id="5、添加约束-建表后"><a href="#5、添加约束-建表后" class="headerlink" title="5、添加约束(建表后)"></a>5、添加约束(建表后)</h6><ul><li><p>添加主键：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table &lt;表名&gt; add constraint pk_config_id(约束名) primary key (id);</span><br></pre></td></tr></table></figure></li><li><p>添加外键：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table &lt;表名&gt; add constraint fk_record_category foreign key (cid) references category(id);</span><br></pre></td></tr></table></figure></li></ul><h6 id="6、设置某字段自增长-建表后"><a href="#6、设置某字段自增长-建表后" class="headerlink" title="6、设置某字段自增长(建表后)"></a>6、设置某字段自增长(建表后)</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table category change id id int auto_increment;</span><br></pre></td></tr></table></figure><h4 id="4、TRUNCATE"><a href="#4、TRUNCATE" class="headerlink" title="4、TRUNCATE"></a>4、TRUNCATE</h4><p>截断表：清除数据，保留表结构。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TRUNCATE TABLE &lt;表名&gt; ;</span><br></pre></td></tr></table></figure><h3 id="2、-数据操纵语言DML（Data-Manipulation-Language）"><a href="#2、-数据操纵语言DML（Data-Manipulation-Language）" class="headerlink" title="2、 数据操纵语言DML（Data Manipulation Language）"></a>2、 数据操纵语言DML（Data Manipulation Language）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE 、 INSERT 、 DELETE</span><br></pre></td></tr></table></figure><blockquote><p>主要为以上操作 即在数据库表中更新，增加和删除记录。</p></blockquote><h4 id="1、UPDATE操作"><a href="#1、UPDATE操作" class="headerlink" title="1、UPDATE操作"></a>1、UPDATE操作</h4><h6 id="1、更新表中记录"><a href="#1、更新表中记录" class="headerlink" title="1、更新表中记录"></a>1、更新表中记录</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE 表名称 SET 列名 &#x3D; 新值 WHERE 列名称 &#x3D; 某值</span><br></pre></td></tr></table></figure><p>使用update时候，order by 会影响查询速度，where中使用函数则会调用筛选器进行扫描，扫描表要尽量避免。</p><h4 id="2、INSERT操作"><a href="#2、INSERT操作" class="headerlink" title="2、INSERT操作"></a>2、INSERT操作</h4><h6 id="1、插入单条数据"><a href="#1、插入单条数据" class="headerlink" title="1、插入单条数据"></a>1、插入单条数据</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT  INTO  表名 [ ( 列名 , ... ) ] VALUES  ( 值 , .... ) ;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT  INTO  表名  [ ( 列名 , ... ) ]  SELECT ...... ;</span><br></pre></td></tr></table></figure><h6 id="2、插入多条数据"><a href="#2、插入多条数据" class="headerlink" title="2、插入多条数据"></a>2、插入多条数据</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">INSERT  INTO  表名</span><br><span class="line">[ ( 列名 , ... ) ]  </span><br><span class="line">VALUES  </span><br><span class="line">( 值 , .... )  ,</span><br><span class="line">( 值 , .... ) , ...... ;</span><br></pre></td></tr></table></figure><h4 id="3、DELETE操作"><a href="#3、DELETE操作" class="headerlink" title="3、DELETE操作"></a>3、DELETE操作</h4><h6 id="1、删除记录"><a href="#1、删除记录" class="headerlink" title="1、删除记录"></a>1、删除记录</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE  FROM  表名 [WHERE 条件 ];</span><br></pre></td></tr></table></figure><h3 id="3、数据查询语言DQL（-Data-Query-Language）"><a href="#3、数据查询语言DQL（-Data-Query-Language）" class="headerlink" title="3、数据查询语言DQL（ Data Query Language）"></a>3、数据查询语言DQL（ Data Query Language）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT </span><br></pre></td></tr></table></figure><blockquote><p>主要为以上操作 即数据表记录的查询。</p></blockquote><h6 id="1、简单查询"><a href="#1、简单查询" class="headerlink" title="1、简单查询"></a>1、简单查询</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT 列名 [ , ... ] FROM 表名 WHERE 条件;</span><br></pre></td></tr></table></figure><h3 id="4、数据控制语言-DCL（-Data-Control-Language）"><a href="#4、数据控制语言-DCL（-Data-Control-Language）" class="headerlink" title="4、数据控制语言 DCL（ Data Control Language）"></a>4、数据控制语言 DCL（ Data Control Language）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant，revoke，if…else，while，begin transaction</span><br></pre></td></tr></table></figure><blockquote><p>主要为以上操作 即指用于设置用户权限和控制事务语句。</p></blockquote><h6 id="1、grant操作"><a href="#1、grant操作" class="headerlink" title="1、grant操作"></a>1、grant操作</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GRANT 权限名称 ON 数据库对象 TO 用户名@&#39;域&#39; ;</span><br><span class="line">举例:  GRANT all ON ecut.* TO ecuter@&#39;%&#39; ;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;数据库语言四大分类&quot;&gt;&lt;a href=&quot;#数据库语言四大分类&quot; class=&quot;headerlink&quot; title=&quot;数据库语言四大分类&quot;&gt;&lt;/a&gt;数据库语言四大分类&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://gitee.com/hlmin/blog-image/raw/master/image/20210605153908.jpeg&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;1、数据定义语言DDL（Data-Ddefinition-Language）&quot;&gt;&lt;a href=&quot;#1、数据定义语言DDL（Data-Ddefinition-Language）&quot; class=&quot;headerlink&quot; title=&quot;1、数据定义语言DDL（Data Ddefinition Language）&quot;&gt;&lt;/a&gt;1、数据定义语言DDL（Data Ddefinition Language）&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CREATE , DROP , ALTER , TRUNCATE&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;主要为以上操作 即&lt;code&gt;对逻辑结构等有操作的&lt;/code&gt;，其中包括表结构，视图和索引。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="MySQL" scheme="https://lecoding.ltd/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://lecoding.ltd/tags/MySQL/"/>
    
    <category term="数据库" scheme="https://lecoding.ltd/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>单例模式</title>
    <link href="https://lecoding.ltd/article/f1601c3e.html"/>
    <id>https://lecoding.ltd/article/f1601c3e.html</id>
    <published>2021-06-05T02:26:50.954Z</published>
    <updated>2021-06-05T03:22:46.821Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、什么是单例模式？"><a href="#1、什么是单例模式？" class="headerlink" title="1、什么是单例模式？"></a>1、什么是单例模式？</h2><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210605112157.jpg" alt="yan" style="zoom:67%;"><p>为了帮助我们更好地理解单例模式，这里借用其他文章的一段话来通俗地表达：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">俺有 6 个漂亮的老婆，她们的老公都是我，我就是我们家里唯一的老公Sigleton，她们只要说道「老公」，都是指的同一个人，那就是我 (刚才做了个梦啦，哪有这么好的事)</span><br><span class="line"></span><br><span class="line">单例模式：单例模式确保某一个类只有一个实例，而且自行实例化并向整个系统提供这个实例单例模式。单例模式只应在有真正的 “单一实例” 的需求时才可使用。</span><br></pre></td></tr></table></figure><a id="more"></a><p>也就是说，单例模式下是不允许实例在类外部被new的，在本类里面创建好实例，再向外暴露一个获取实例的方法，给需求者进行实例调用。</p><p>单例模式1下有两种加载方式==&gt;【饿汉式】和【懒汉式】。我们先来看这两种方式下的最简单的单例模式代码：</p><p style="color:red">饿汉式：顾名思义是不管用不用，先直接创建出实例，像饿汉子一样</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Star</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1、直接创建实例</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Star star = <span class="keyword">new</span> Star();<span class="comment">//这个实例是唯一的实例</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2、将构造私有化</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">Star</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3、提供一个获取本类的实例的类方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Star <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> star;<span class="comment">//返回唯一的实例</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面这种方式是线程安全的。</p><p>但此种⽅式并不是懒加载，也就是说⽆论你程序中是否⽤到这样的类都会在程序启动之初进⾏创建。</p><p>那么这种⽅式导致的问题就像你下载个游戏软件，可能你游戏地图还没有打开呢，但是程序已经将这些地图全部实例化。到你⼿机上最明显体验就⼀开游戏内存满了，⼿机卡了，需要换了。</p><p style="color:red">懒汉式：顾名思义是等到要用时才去创建出实例，像极了懒汉子</p><center>线程不安全的懒汉单例</center><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton_01</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> Singleton_01 instance;</span><br><span class="line">     <span class="function"><span class="keyword">private</span> <span class="title">Singleton_01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     &#125;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton_01 <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">     <span class="keyword">if</span> (<span class="keyword">null</span> != instance) <span class="keyword">return</span> instance;</span><br><span class="line">     instance = <span class="keyword">new</span> Singleton_01();</span><br><span class="line">     <span class="keyword">return</span> instance;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><center>线程安全的懒汉单例</center><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton_02</span> </span>&#123;</span><br><span class="line">     <span class="keyword">private</span> <span class="keyword">static</span> Singleton_02 instance;</span><br><span class="line">     <span class="function"><span class="keyword">private</span> <span class="title">Singleton_02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> Singleton_02 <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">         <span class="keyword">if</span> (<span class="keyword">null</span> != instance) <span class="keyword">return</span> instance;</span><br><span class="line">         instance = <span class="keyword">new</span> Singleton_02();</span><br><span class="line">         <span class="keyword">return</span> instance;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p style="color:red">在获取实例的方法上添加synchronized关键字，保证线程安全。</p><h2 id="2、双重校验锁单例（推荐）"><a href="#2、双重校验锁单例（推荐）" class="headerlink" title="2、双重校验锁单例（推荐）"></a>2、双重校验锁单例（推荐）</h2><p>从上面的代码示例可以知道，我们书写单例模式的固定三步曲为：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、创建单例的静态实例变量</span><br><span class="line">2、构造方法私有化</span><br><span class="line">3、开放获取实例的静态方法</span><br></pre></td></tr></table></figure><p>再来看代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 单例模式;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Administrator</span></span><br><span class="line"><span class="comment"> * @创建者: 黄乐敏</span></span><br><span class="line"><span class="comment"> * @类名: Singleton01</span></span><br><span class="line"><span class="comment"> * @类描述: 双重校验锁</span></span><br><span class="line"><span class="comment"> * @创建时间: 2021年06月05日  9:54</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton01</span> </span>&#123;</span><br><span class="line">    <span class="comment">//1、创建单例的静态实例变量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton01 instance;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @方法描述:   2、构造方法私有化</span></span><br><span class="line"><span class="comment">     * @参数: []</span></span><br><span class="line"><span class="comment">     * @返回值类型:</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton01</span><span class="params">()</span></span>&#123;&#125;;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @方法描述:   3、开放获取实例的静态方法</span></span><br><span class="line"><span class="comment">     * @参数: []</span></span><br><span class="line"><span class="comment">     * @返回值类型: 单例模式.Singleton01</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton01 <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (instance != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> instance;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">synchronized</span> (Singleton01.class)&#123;</span><br><span class="line">            <span class="keyword">if</span> (instance == <span class="keyword">null</span>)&#123;</span><br><span class="line">                instance = <span class="keyword">new</span> Singleton01();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> instance;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所谓的双重校验是在实例方法内进行的，在创建实例之前，将创建实例的代码块进行synchronized加锁，然后继续判断实例是否已创建。</p><h2 id="3、为什么要有单例模式？"><a href="#3、为什么要有单例模式？" class="headerlink" title="3、为什么要有单例模式？"></a>3、为什么要有单例模式？</h2><p>【TODO】</p><h2 id="4、使用单例模式的场景？"><a href="#4、使用单例模式的场景？" class="headerlink" title="4、使用单例模式的场景？"></a>4、使用单例模式的场景？</h2><p>【TODO】</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;1、什么是单例模式？&quot;&gt;&lt;a href=&quot;#1、什么是单例模式？&quot; class=&quot;headerlink&quot; title=&quot;1、什么是单例模式？&quot;&gt;&lt;/a&gt;1、什么是单例模式？&lt;/h2&gt;&lt;img src=&quot;https://gitee.com/hlmin/blog-image/raw/master/image/20210605112157.jpg&quot; alt=&quot;yan&quot; style=&quot;zoom:67%;&quot;&gt;

&lt;p&gt;为了帮助我们更好地理解单例模式，这里借用其他文章的一段话来通俗地表达：&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;俺有 6 个漂亮的老婆，她们的老公都是我，我就是我们家里唯一的老公Sigleton，她们只要说道「老公」，都是指的同一个人，那就是我 (刚才做了个梦啦，哪有这么好的事)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;单例模式：单例模式确保某一个类只有一个实例，而且自行实例化并向整个系统提供这个实例单例模式。单例模式只应在有真正的 “单一实例” 的需求时才可使用。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="设计模式" scheme="https://lecoding.ltd/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
    <category term="设计模式" scheme="https://lecoding.ltd/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    <category term="单例模式" scheme="https://lecoding.ltd/tags/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>在线教育项目（一）</title>
    <link href="https://lecoding.ltd/article/8339bf77.html"/>
    <id>https://lecoding.ltd/article/8339bf77.html</id>
    <published>2021-05-27T07:42:26.545Z</published>
    <updated>2021-05-27T12:38:53.594Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、在线教育项目之前言"><a href="#一、在线教育项目之前言" class="headerlink" title="一、在线教育项目之前言"></a>一、在线教育项目之前言</h1><h2 id="1、学习项目之前应具备的技术栈"><a href="#1、学习项目之前应具备的技术栈" class="headerlink" title="1、学习项目之前应具备的技术栈"></a>1、学习项目之前应具备的技术栈</h2><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/%E6%8A%80%E6%9C%AF%E6%A0%88.png" alt="image-20210527152911535"></p><a id="more"></a><h2 id="2、学习项目的准备"><a href="#2、学习项目的准备" class="headerlink" title="2、学习项目的准备"></a>2、学习项目的准备</h2><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/%E5%87%86%E5%A4%87.png" alt="image-20210527153217741"></p><h3 id="2-1、项目背景"><a href="#2-1、项目背景" class="headerlink" title="2.1、项目背景"></a>2.1、项目背景</h3><p>是一个B2C模式的职业技能在线教育系统，分为前台用户系统和后台运营平台。</p><h3 id="2-2、商业模式"><a href="#2-2、商业模式" class="headerlink" title="2.2、商业模式"></a>2.2、商业模式</h3><p>此在线教育项目采用的模式为：</p><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/%E6%A8%A1%E5%BC%8F.png" alt="image-20210527154553325"></p><p>.</p><p>.</p><p>.</p><h3 id="2-3、技术认识（前后端分离开发）"><a href="#2-3、技术认识（前后端分离开发）" class="headerlink" title="2.3、技术认识（前后端分离开发）"></a>2.3、技术认识（前后端分离开发）</h3><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF.png" alt="image-20210527154903648"></p><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/%E5%85%B6%E4%BB%96.png" alt="image-20210527155033373"></p><h1 id="二、认识项目"><a href="#二、认识项目" class="headerlink" title="二、认识项目"></a>二、认识项目</h1><h2 id="1、功能简介"><a href="#1、功能简介" class="headerlink" title="1、功能简介"></a>1、功能简介</h2><p>是一个B2C模式的职业技能在线教育系统，分为前台用户系统和后台运营平台。</p><h2 id="2、系统模块"><a href="#2、系统模块" class="headerlink" title="2、系统模块"></a>2、系统模块</h2><p>业务模块图：</p><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/%E6%A8%A1%E5%9D%97%E5%9B%BE.png" alt="image-20210527201849157"></p><h2 id="3、系统架构"><a href="#3、系统架构" class="headerlink" title="3、系统架构"></a>3、系统架构</h2><p><strong>架构设计需要考虑的几个方面：</strong></p><p><strong>性能：</strong>主要考虑访问频率，每个用户每天的访问次数。项目初始阶段用户的访问量并不大，如果考</p><p>虑做运营推广，可能会迎来服务器访问量骤增，因此要考虑<strong>分布式部署，引入缓存</strong></p><p><strong>可扩展性：</strong>系统功能会随着用户量的增加以及多变的互联网用户需求不断地扩展，因此考虑到系统</p><p>的可扩展性的要求需要<strong>使用微服务架构，引入消息中间件</strong></p><p><strong>高可用：</strong>系统一旦宕机，将会带来不可挽回的损失，因此必须做负载均衡，甚至是异地多活这类复</p><p>杂的方案。如果数据丢失，修复将会非常麻烦，只能靠人工逐条修复，这个很难接受，因此需要考</p><p>虑存储高可靠。我们需要考虑多种异常情况：机器故障、机房故障，针对机器故障，我们需要设计MySQL 同机房主备方案；针对机房故障，我们需要设计 MySQL 跨机房同步方案。</p><p><strong>安全性：</strong>系统的信息有一定的隐私性，例如用户的个人身份信息，不包含强隐私（例如玉照、情</p><p>感）的信息，因此使用账号密码管理、数据库访问权限控制即可。</p><p><strong>成本：</strong>视频类网站的主要成本在于服务器成本、流量成本、存储成本、流媒体研发成本，中小型公</p><p>司可以考虑使用云服务器和云服务。</p><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/01.png" alt="image-20210527202014966"></p><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/02.png" alt="image-20210527202102867"></p><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/03.png" alt="image-20210527202131995"></p><h1 id="三、前后端分离开发介绍"><a href="#三、前后端分离开发介绍" class="headerlink" title="三、前后端分离开发介绍"></a>三、前后端分离开发介绍</h1><p>前后端分离开发是现在比较主流的开发架构：</p><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB.png" alt="image-20210527160602164"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;一、在线教育项目之前言&quot;&gt;&lt;a href=&quot;#一、在线教育项目之前言&quot; class=&quot;headerlink&quot; title=&quot;一、在线教育项目之前言&quot;&gt;&lt;/a&gt;一、在线教育项目之前言&lt;/h1&gt;&lt;h2 id=&quot;1、学习项目之前应具备的技术栈&quot;&gt;&lt;a href=&quot;#1、学习项目之前应具备的技术栈&quot; class=&quot;headerlink&quot; title=&quot;1、学习项目之前应具备的技术栈&quot;&gt;&lt;/a&gt;1、学习项目之前应具备的技术栈&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://gitee.com/hlmin/blog-image/raw/master/image/%E6%8A%80%E6%9C%AF%E6%A0%88.png&quot; alt=&quot;image-20210527152911535&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="项目" scheme="https://lecoding.ltd/categories/%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="项目学习" scheme="https://lecoding.ltd/tags/%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="前后端分离" scheme="https://lecoding.ltd/tags/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"/>
    
  </entry>
  
  <entry>
    <title>尘曲</title>
    <link href="https://lecoding.ltd/article/85cdc7ae.html"/>
    <id>https://lecoding.ltd/article/85cdc7ae.html</id>
    <published>2021-05-27T06:31:00.426Z</published>
    <updated>2021-05-27T07:09:21.602Z</updated>
    
    <content type="html"><![CDATA[<p>​                        凡心所向，素履所往，生如逆旅，一苇以航。<br>​                        三月桃花，四月欢唱，两人一马，明日故乡。                        </p><p>​                        流浪陌路，暖然绯凉，写意人生，相识一场。<br>​                        不关此世，不负己心，我自倾杯，君且随意。</p><p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210527150537.jpg" alt="a15873f56d1d6840455fe66f1fb1b220"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​                        凡心所向，素履所往，生如逆旅，一苇以航。&lt;br&gt;​                        三月桃花，四月欢唱，两人一马，明日故乡。                        &lt;/p&gt;
&lt;p&gt;​          </summary>
      
    
    
    
    <category term="摘录" scheme="https://lecoding.ltd/categories/%E6%91%98%E5%BD%95/"/>
    
    
    <category term="文艺" scheme="https://lecoding.ltd/tags/%E6%96%87%E8%89%BA/"/>
    
    <category term="摘录" scheme="https://lecoding.ltd/tags/%E6%91%98%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>IDEA常用快捷键</title>
    <link href="https://lecoding.ltd/article/566321e7.html"/>
    <id>https://lecoding.ltd/article/566321e7.html</id>
    <published>2021-02-26T14:39:42.115Z</published>
    <updated>2021-05-28T13:53:20.666Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/hlmin/blog-image/raw/master/image/20210528212635.jpg" alt="1"></p><a id="more"></a><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">ctrl+shift+alt：多行操作</span><br><span class="line">psvm：生成main()方法；</span><br><span class="line">fori：生成for循环；</span><br><span class="line">Ctrl+Alt+v：自动补齐返回值类型</span><br><span class="line">ctrl+o：覆写方法</span><br><span class="line">ctrl+i：实现接口中的方法</span><br><span class="line">ctrl+shift+u：大小写转换</span><br><span class="line">CTRL+SHIFT+Z：取消撤销</span><br><span class="line">Alt＋Insert：生成构造方法、getter、setter</span><br><span class="line">ctrl+y：删除当前行</span><br><span class="line">Ctrl+Shift+J：将选中的行合并成一行</span><br><span class="line">ctrl+g：定位到某一行</span><br><span class="line">Ctrl+Shitft+向下箭头：将光标所在的代码块向下整体移动</span><br><span class="line">Ctrl+Shift+向上箭头：将光标所在的代码块向上整体移动</span><br><span class="line">Alt+Shift+向下箭头：将行向下移动</span><br><span class="line">Alt+Shift+向上箭头：将行向上移动</span><br><span class="line">Ctrl+F：在当前文件中查找</span><br><span class="line">Ctrl+R：替换字符串</span><br><span class="line">Ctrl+Shift+F:在全局文件中查找字符串</span><br><span class="line">Ctrl+Shift+R：在全局中替换字符串</span><br><span class="line">Ctrl+Shift+Enter：自动补齐&#123;&#125;或者分号;</span><br><span class="line">Shift+Enter：在当前行的下方开始新行</span><br><span class="line">Ctrl+Alt+Enter：在当前行的上方插入新行</span><br><span class="line">Ctrl+Delete：删除光标所在至单词结尾处的所有字符</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/hlmin/blog-image/raw/master/image/20210528212635.jpg&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="工具" scheme="https://lecoding.ltd/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="快捷键" scheme="https://lecoding.ltd/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
    <category term="IDEA" scheme="https://lecoding.ltd/tags/IDEA/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://lecoding.ltd/article/16107.html"/>
    <id>https://lecoding.ltd/article/16107.html</id>
    <published>2020-12-07T12:26:26.543Z</published>
    <updated>2021-05-28T14:13:43.789Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><a id="more"></a><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&amp;quot;My New Post&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
